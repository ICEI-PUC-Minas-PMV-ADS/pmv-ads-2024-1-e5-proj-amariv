diff a/src/amariv-front-end/src/components/Button.tsx b/src/amariv-front-end/src/components/Button.tsx	(rejected hunks)
@@ -1,6 +1,6 @@
 import React from 'react';
-import {VariantProps, tv} from 'tailwind-variants';
-import {twMerge} from 'tailwind-merge';
+import { VariantProps, tv } from 'tailwind-variants';
+import { twMerge } from 'tailwind-merge';
 
 /**
  * Variants
@@ -9,12 +9,18 @@ import {twMerge} from 'tailwind-merge';
 const button = tv({
   base: 'w-full rounded-lg',
   variants: {
+    fontSize: {
+      "small": 'py-2 px-4 text-[.65rem]',
+      "medium": 'py-2 px-4 text-[.85rem]',
+      "default": 'py-4',
+    },
     color: {
-      primary: 'py-4 bg-[#CADDA8] text-[#53735B] active:bg-[#AABD88] rounded-lg',
-      secondary: 'py-4 bg-[#53735B] text-[#CADDA8] active:bg-[#43634B] rounded-2xl',
+      primary: 'bg-[#CADDA8] text-[#53735B] active:bg-[#AABD88] disabled:bg-[#666666] rounded-lg',
+      secondary: 'bg-[#53735B] text-[#CADDA8] active:bg-[#43634B] disabled:bg-[#666666] rounded-2xl',
     }
   },
   defaultVariants: {
+    fontSize: 'default',
     color: 'primary',
   }
 });
@@ -31,10 +37,10 @@ export type ButtonProps = React.ComponentProps<'button'> & VariantProps<typeof b
  * Button
  */
 
-export function Button({ label, color = 'primary', ...props}: ButtonProps) {
+export function Button({ label, color, fontSize, ...props }: ButtonProps) {
   return (
     <button {...props}
-      className={twMerge(button({color}), props.className)}
+      className={twMerge(button({ color, fontSize }), props.className)}
     >{label}</button>
   );
 }
\ No newline at end of file
